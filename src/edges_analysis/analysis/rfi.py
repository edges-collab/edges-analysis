import numpy as np


def excision_raw_frequency(f, d, w):
    if (len(d.shape) == 1) and (len(w.shape) == 1):
        dd = np.copy(d.reshape((1, -1)))
        ww = np.copy(w.reshape((1, -1)))

    else:
        dd = np.copy(d)
        ww = np.copy(w)

    dd[:, (f > 87.57) & (f < 87.63)] = 0
    dd[:, (f > 87.78) & (f < 87.88)] = 0
    dd[:, (f > 87.95) & (f < 88.05)] = 0
    dd[:, (f > 88.06) & (f < 88.14)] = 0
    dd[:, (f > 88.35) & (f < 88.40)] = 0
    dd[:, (f > 88.45) & (f < 88.55)] = 0
    dd[:, (f > 88.68) & (f < 88.74)] = 0
    dd[:, (f > 89.07) & (f < 89.15)] = 0
    dd[:, (f > 89.28) & (f < 89.32)] = 0
    dd[:, (f > 89.48) & (f < 89.52)] = 0
    dd[:, (f > 89.65) & (f < 89.75)] = 0
    dd[:, (f > 89.87) & (f < 89.93)] = 0
    dd[:, (f > 89.95) & (f < 89.99)] = 0
    dd[:, (f > 90.06) & (f < 90.11)] = 0
    dd[:, (f > 90.38) & (f < 90.42)] = 0
    dd[:, (f > 90.47) & (f < 90.54)] = 0
    dd[:, (f > 90.68) & (f < 90.74)] = 0
    dd[:, (f > 90.80) & (f < 91.15)] = 0
    dd[:, (f > 91.27) & (f < 91.33)] = 0
    dd[:, (f > 91.47) & (f < 91.53)] = 0
    dd[:, (f > 91.57) & (f < 91.78)] = 0
    dd[:, (f > 91.84) & (f < 91.97)] = 0
    dd[:, (f > 92.01) & (f < 92.21)] = 0
    dd[:, (f > 92.28) & (f < 92.32)] = 0
    dd[:, (f > 92.42) & (f < 92.55)] = 0
    dd[:, (f > 92.66) & (f < 92.74)] = 0
    dd[:, (f > 92.79) & (f < 92.98)] = 0
    dd[:, (f > 93.07) & (f < 93.12)] = 0
    dd[:, (f > 93.23) & (f < 93.35)] = 0
    dd[:, (f > 93.60) & (f < 93.83)] = 0
    dd[:, (f > 93.87) & (f < 93.94)] = 0
    dd[:, (f > 93.99) & (f < 94.35)] = 0
    dd[:, (f > 94.40) & (f < 94.60)] = 0
    dd[:, (f > 94.80) & (f < 95.15)] = 0
    dd[:, (f > 95.22) & (f < 95.35)] = 0
    dd[:, (f > 95.47) & (f < 95.53)] = 0
    dd[:, (f > 95.63) & (f < 95.80)] = 0
    dd[:, (f > 95.98) & (f < 96.19)] = 0
    dd[:, (f > 96.25) & (f < 96.75)] = 0
    dd[:, (f > 96.83) & (f < 96.96)] = 0
    dd[:, (f > 97.06) & (f < 97.15)] = 0
    dd[:, (f > 97.24) & (f < 97.38)] = 0
    dd[:, (f > 97.65) & (f < 97.75)] = 0
    dd[:, (f > 97.85) & (f < 98.22)] = 0
    dd[:, (f > 98.26) & (f < 98.35)] = 0
    dd[:, (f > 98.41) & (f < 98.58)] = 0
    dd[:, (f > 98.65) & (f < 99.01)] = 0
    dd[:, (f > 99.22) & (f < 99.38)] = 0
    dd[:, (f > 99.49) & (f < 99.51)] = 0
    dd[:, (f > 99.57) & (f < 99.95)] = 0
    dd[:, (f > 100.02) & (f < 100.17)] = 0
    dd[:, (f > 100.27) & (f < 100.33)] = 0
    dd[:, (f > 100.46) & (f < 100.54)] = 0
    dd[:, (f > 100.68) & (f < 100.71)] = 0
    dd[:, (f > 100.83) & (f < 100.95)] = 0
    dd[:, (f > 101.02) & (f < 101.18)] = 0
    dd[:, (f > 101.22) & (f < 101.38)] = 0
    dd[:, (f > 101.46) & (f < 101.52)] = 0
    dd[:, (f > 101.65) & (f < 101.75)] = 0
    dd[:, (f > 101.88) & (f < 101.91)] = 0
    dd[:, (f > 102.06) & (f < 102.14)] = 0
    dd[:, (f > 102.25) & (f < 102.35)] = 0
    dd[:, (f > 102.47) & (f < 102.52)] = 0
    dd[:, (f > 102.66) & (f < 102.74)] = 0
    dd[:, (f > 102.78) & (f < 102.82)] = 0
    dd[:, (f > 102.86) & (f < 102.96)] = 0
    dd[:, (f > 103.02) & (f < 103.19)] = 0
    dd[:, (f > 103.29) & (f < 103.32)] = 0
    dd[:, (f > 103.49) & (f < 103.52)] = 0
    dd[:, (f > 103.65) & (f < 103.75)] = 0
    dd[:, (f > 103.86) & (f < 103.94)] = 0
    dd[:, (f > 103.99) & (f < 104.01)] = 0
    dd[:, (f > 104.08) & (f < 104.12)] = 0
    dd[:, (f > 104.29) & (f < 104.32)] = 0
    dd[:, (f > 104.45) & (f < 104.55)] = 0
    dd[:, (f > 104.66) & (f < 104.73)] = 0
    dd[:, (f > 104.88) & (f < 104.93)] = 0
    dd[:, (f > 105.06) & (f < 105.14)] = 0
    dd[:, (f > 105.27) & (f < 105.33)] = 0
    dd[:, (f > 105.49) & (f < 105.52)] = 0
    dd[:, (f > 105.65) & (f < 105.73)] = 0
    dd[:, (f > 105.88) & (f < 105.92)] = 0
    dd[:, (f > 106.07) & (f < 106.13)] = 0
    dd[:, (f > 106.22) & (f < 106.38)] = 0
    dd[:, (f > 106.46) & (f < 106.53)] = 0
    dd[:, (f > 106.68) & (f < 106.72)] = 0
    dd[:, (f > 106.85) & (f < 106.93)] = 0
    dd[:, (f > 107.08) & (f < 107.12)] = 0
    dd[:, (f > 107.27) & (f < 107.34)] = 0
    dd[:, (f > 107.45) & (f < 107.55)] = 0
    dd[:, (f > 107.64) & (f < 107.76)] = 0
    dd[:, (f > 107.85) & (f < 107.95)] = 0
    dd[:, (f > 112.38) & (f < 112.42)] = 0
    dd[:, (f > 112.88) & (f < 112.92)] = 0
    dd[:, (f > 112.98) & (f < 113.02)] = 0
    dd[:, (f > 113.88) & (f < 113.92)] = 0
    dd[:, (f > 114.08) & (f < 114.12)] = 0
    dd[:, (f > 114.28) & (f < 114.32)] = 0
    dd[:, (f > 121.13) & (f < 121.20)] = 0
    dd[:, (f > 128.43) & (f < 128.46)] = 0
    dd[:, (f > 130.02) & (f < 130.12)] = 0
    dd[:, (f > 130.52) & (f < 130.59)] = 0
    dd[:, (f > 131.52) & (f < 131.59)] = 0
    dd[:, (f > 144.12) & (f < 144.15)] = 0
    dd[:, (f > 148.60) & (f < 148.65)] = 0
    dd[:, (f > 149.02) & (f < 149.07)] = 0
    dd[:, (f > 145.78) & (f < 146.10)] = 0
    dd[:, (f > 149.85) & (f < 150.04)] = 0
    dd[:, (f > 150.15) & (f < 150.30)] = 0
    dd[:, (f > 150.32) & (f < 150.46)] = 0
    dd[:, (f > 150.58) & (f < 150.66)] = 0
    dd[:, (f > 151.30) & (f < 151.50)] = 0
    dd[:, (f > 155.30) & (f < 155.35)] = 0

    dd[:, (f > 118.23) & (f < 118.40)] = 0
    dd[:, (f > 118.90) & (f < 119.10)] = 0
    dd[:, (f > 119.61) & (f < 119.70)] = 0
    dd[:, (f > 120.76) & (f < 120.86)] = 0
    dd[:, (f > 121.46) & (f < 121.54)] = 0
    dd[:, (f > 125.16) & (f < 125.25)] = 0
    dd[:, (f > 126.50) & (f < 126.60)] = 0
    dd[:, (f > 126.76) & (f < 126.85)] = 0
    dd[:, (f > 126.96) & (f < 127.05)] = 0
    dd[:, (f > 127.24) & (f < 127.37)] = 0
    dd[:, (f > 128.11) & (f < 128.20)] = 0
    dd[:, (f > 128.65) & (f < 128.86)] = 0
    dd[:, (f > 129.20) & (f < 129.30)] = 0
    dd[:, (f > 129.70) & (f < 130.15)] = 0
    dd[:, (f > 130.35) & (f < 130.45)] = 0
    dd[:, (f > 131.20) & (f < 131.34)] = 0
    dd[:, (f > 131.42) & (f < 131.62)] = 0
    dd[:, (f > 131.68) & (f < 131.78)] = 0
    dd[:, (f > 131.90) & (f < 132.06)] = 0
    dd[:, (f > 132.13) & (f < 132.18)] = 0
    dd[:, (f > 133.58) & (f < 133.62)] = 0
    dd[:, (f > 133.68) & (f < 133.73)] = 0
    dd[:, (f > 133.88) & (f < 133.93)] = 0
    dd[:, (f > 134.16) & (f < 134.24)] = 0
    dd[:, (f > 136.23) & (f < 136.29)] = 0
    dd[:, (f > 136.37) & (f < 136.47)] = 0
    dd[:, (f > 136.60) & (f < 136.73)] = 0
    dd[:, (f > 136.84) & (f < 137.98)] = 0
    dd[:, (f > 147.50) & (f < 147.57)] = 0

    dd[:, (f > 90.14) & (f < 90.16)] = 0
    dd[:, (f > 100.66) & (f < 100.73)] = 0
    dd[:, (f > 117.19) & (f < 117.21)] = 0
    dd[:, (f > 118.295) & (f < 118.307)] = 0
    dd[:, (f > 120.79) & (f < 120.81)] = 0
    dd[:, (f > 121.125) & (f < 121.214)] = 0
    dd[:, (f > 122.084) & (f < 122.120)] = 0
    dd[:, (f > 122.39) & (f < 122.41)] = 0
    dd[:, (f > 122.586) & (f < 122.617)] = 0
    dd[:, (f > 123.391) & (f < 123.41)] = 0
    dd[:, (f > 124.485) & (f < 124.515)] = 0
    dd[:, (f > 124.79) & (f < 124.815)] = 0
    dd[:, (f > 125.418) & (f < 125.46)] = 0
    dd[:, (f > 125.687) & (f < 125.724)] = 0
    dd[:, (f > 125.888) & (f < 125.938)] = 0
    dd[:, (f > 126.694) & (f < 126.705)] = 0
    dd[:, (f > 127.28) & (f < 127.324)] = 0
    dd[:, (f > 128.59) & (f < 128.611)] = 0
    dd[:, (f > 128.794) & (f < 128.812)] = 0
    dd[:, (f > 129.248) & (f < 129.257)] = 0
    dd[:, (f > 129.482) & (f < 129.52)] = 0
    dd[:, (f > 129.813) & (f < 129.99)] = 0
    dd[:, (f > 130.337) & (f < 130.356)] = 0
    dd[:, (f > 131.131) & (f < 131.168)] = 0
    dd[:, (f > 131.436) & (f < 131.467)] = 0
    dd[:, (f > 131.943) & (f < 131.961)] = 0
    dd[:, (f > 131.984) & (f < 132.018)] = 0
    dd[:, (f > 133.481) & (f < 133.517)] = 0
    dd[:, (f > 133.78) & (f < 133.823)] = 0
    dd[:, (f > 133.988) & (f < 134.012)] = 0
    dd[:, (f > 134.183) & (f < 134.216)] = 0
    dd[:, (f > 135.336) & (f < 135.367)] = 0
    dd[:, (f > 136.252) & (f < 136.276)] = 0
    dd[:, (f > 136.398) & (f < 136.453)] = 0
    dd[:, (f > 136.429) & (f < 136.453)] = 0
    dd[:, (f > 136.624) & (f < 136.703)] = 0
    dd[:, (f > 136.759) & (f < 136.813)] = 0
    dd[:, (f > 136.96) & (f < 137.472)] = 0
    dd[:, (f > 137.491) & (f < 137.657)] = 0
    dd[:, (f > 137.662) & (f < 137.832)] = 0
    dd[:, (f > 137.863) & (f < 137.949)] = 0
    dd[:, (f > 145.761) & (f < 145.777)] = 0
    dd[:, (f > 153.885) & (f < 153.921)] = 0
    dd[:, (f > 179.996) & (f < 180.03)] = 0

    ww[:, (f > 90.14) & (f < 90.16)] = 0
    ww[:, (f > 87.57) & (f < 87.63)] = 0
    ww[:, (f > 87.78) & (f < 87.88)] = 0
    ww[:, (f > 87.95) & (f < 88.05)] = 0
    ww[:, (f > 88.06) & (f < 88.14)] = 0
    ww[:, (f > 88.35) & (f < 88.40)] = 0
    ww[:, (f > 88.45) & (f < 88.55)] = 0
    ww[:, (f > 88.68) & (f < 88.74)] = 0
    ww[:, (f > 89.07) & (f < 89.15)] = 0
    ww[:, (f > 89.28) & (f < 89.32)] = 0
    ww[:, (f > 89.48) & (f < 89.52)] = 0
    ww[:, (f > 89.65) & (f < 89.75)] = 0
    ww[:, (f > 89.87) & (f < 89.93)] = 0
    ww[:, (f > 89.95) & (f < 89.99)] = 0
    ww[:, (f > 90.06) & (f < 90.11)] = 0
    ww[:, (f > 90.38) & (f < 90.42)] = 0
    ww[:, (f > 90.47) & (f < 90.54)] = 0
    ww[:, (f > 90.68) & (f < 90.74)] = 0
    ww[:, (f > 90.80) & (f < 91.15)] = 0
    ww[:, (f > 91.27) & (f < 91.33)] = 0
    ww[:, (f > 91.47) & (f < 91.53)] = 0
    ww[:, (f > 91.57) & (f < 91.78)] = 0
    ww[:, (f > 91.84) & (f < 91.97)] = 0
    ww[:, (f > 92.01) & (f < 92.21)] = 0
    ww[:, (f > 92.28) & (f < 92.32)] = 0
    ww[:, (f > 92.42) & (f < 92.55)] = 0
    ww[:, (f > 92.66) & (f < 92.74)] = 0
    ww[:, (f > 92.79) & (f < 92.98)] = 0
    ww[:, (f > 93.07) & (f < 93.12)] = 0
    ww[:, (f > 93.23) & (f < 93.35)] = 0
    ww[:, (f > 93.60) & (f < 93.83)] = 0
    ww[:, (f > 93.87) & (f < 93.94)] = 0
    ww[:, (f > 93.99) & (f < 94.35)] = 0
    ww[:, (f > 94.40) & (f < 94.60)] = 0
    ww[:, (f > 94.80) & (f < 95.15)] = 0
    ww[:, (f > 95.22) & (f < 95.35)] = 0
    ww[:, (f > 95.47) & (f < 95.53)] = 0
    ww[:, (f > 95.63) & (f < 95.80)] = 0
    ww[:, (f > 95.98) & (f < 96.19)] = 0
    ww[:, (f > 96.25) & (f < 96.75)] = 0
    ww[:, (f > 96.83) & (f < 96.96)] = 0
    ww[:, (f > 97.06) & (f < 97.15)] = 0
    ww[:, (f > 97.24) & (f < 97.38)] = 0
    ww[:, (f > 97.65) & (f < 97.75)] = 0
    ww[:, (f > 97.85) & (f < 98.22)] = 0
    ww[:, (f > 98.26) & (f < 98.35)] = 0
    ww[:, (f > 98.41) & (f < 98.58)] = 0
    ww[:, (f > 98.65) & (f < 99.01)] = 0
    ww[:, (f > 99.22) & (f < 99.38)] = 0
    ww[:, (f > 99.49) & (f < 99.51)] = 0
    ww[:, (f > 99.57) & (f < 99.95)] = 0
    ww[:, (f > 100.02) & (f < 100.17)] = 0
    ww[:, (f > 100.27) & (f < 100.33)] = 0
    ww[:, (f > 100.46) & (f < 100.54)] = 0
    ww[:, (f > 100.68) & (f < 100.71)] = 0
    ww[:, (f > 100.83) & (f < 100.95)] = 0
    ww[:, (f > 101.02) & (f < 101.18)] = 0
    ww[:, (f > 101.22) & (f < 101.38)] = 0
    ww[:, (f > 101.46) & (f < 101.52)] = 0
    ww[:, (f > 101.65) & (f < 101.75)] = 0
    ww[:, (f > 101.88) & (f < 101.91)] = 0
    ww[:, (f > 102.06) & (f < 102.14)] = 0
    ww[:, (f > 102.25) & (f < 102.35)] = 0
    ww[:, (f > 102.47) & (f < 102.52)] = 0
    ww[:, (f > 102.66) & (f < 102.74)] = 0
    ww[:, (f > 102.78) & (f < 102.82)] = 0
    ww[:, (f > 102.86) & (f < 102.96)] = 0
    ww[:, (f > 103.02) & (f < 103.19)] = 0
    ww[:, (f > 103.29) & (f < 103.32)] = 0
    ww[:, (f > 103.49) & (f < 103.52)] = 0
    ww[:, (f > 103.65) & (f < 103.75)] = 0
    ww[:, (f > 103.86) & (f < 103.94)] = 0
    ww[:, (f > 103.99) & (f < 104.01)] = 0
    ww[:, (f > 104.08) & (f < 104.12)] = 0
    ww[:, (f > 104.29) & (f < 104.32)] = 0
    ww[:, (f > 104.45) & (f < 104.55)] = 0
    ww[:, (f > 104.66) & (f < 104.73)] = 0
    ww[:, (f > 104.88) & (f < 104.93)] = 0
    ww[:, (f > 105.06) & (f < 105.14)] = 0
    ww[:, (f > 105.27) & (f < 105.33)] = 0
    ww[:, (f > 105.49) & (f < 105.52)] = 0
    ww[:, (f > 105.65) & (f < 105.73)] = 0
    ww[:, (f > 105.88) & (f < 105.92)] = 0
    ww[:, (f > 106.07) & (f < 106.13)] = 0
    ww[:, (f > 106.22) & (f < 106.38)] = 0
    ww[:, (f > 106.46) & (f < 106.53)] = 0
    ww[:, (f > 106.68) & (f < 106.72)] = 0
    ww[:, (f > 106.85) & (f < 106.93)] = 0
    ww[:, (f > 107.08) & (f < 107.12)] = 0
    ww[:, (f > 107.27) & (f < 107.34)] = 0
    ww[:, (f > 107.45) & (f < 107.55)] = 0
    ww[:, (f > 107.64) & (f < 107.76)] = 0
    ww[:, (f > 107.85) & (f < 107.95)] = 0
    ww[:, (f > 112.38) & (f < 112.42)] = 0
    ww[:, (f > 112.88) & (f < 112.92)] = 0
    ww[:, (f > 112.98) & (f < 113.02)] = 0
    ww[:, (f > 113.88) & (f < 113.92)] = 0
    ww[:, (f > 114.08) & (f < 114.12)] = 0
    ww[:, (f > 114.28) & (f < 114.32)] = 0
    ww[:, (f > 121.13) & (f < 121.20)] = 0
    ww[:, (f > 128.43) & (f < 128.46)] = 0
    ww[:, (f > 130.02) & (f < 130.12)] = 0
    ww[:, (f > 130.52) & (f < 130.59)] = 0
    ww[:, (f > 131.52) & (f < 131.59)] = 0

    ww[:, (f > 144.12) & (f < 144.15)] = 0
    ww[:, (f > 148.60) & (f < 148.65)] = 0
    ww[:, (f > 149.02) & (f < 149.07)] = 0
    ww[:, (f > 145.78) & (f < 146.10)] = 0
    ww[:, (f > 149.85) & (f < 150.04)] = 0
    ww[:, (f > 150.15) & (f < 150.30)] = 0
    ww[:, (f > 150.32) & (f < 150.46)] = 0
    ww[:, (f > 150.58) & (f < 150.66)] = 0
    ww[:, (f > 151.30) & (f < 151.50)] = 0
    ww[:, (f > 155.30) & (f < 155.35)] = 0

    ww[:, (f > 100.66) & (f < 100.73)] = 0
    ww[:, (f > 117.19) & (f < 117.21)] = 0
    ww[:, (f > 118.295) & (f < 118.307)] = 0
    ww[:, (f > 120.79) & (f < 120.81)] = 0
    ww[:, (f > 121.125) & (f < 121.214)] = 0
    ww[:, (f > 122.084) & (f < 122.120)] = 0
    ww[:, (f > 122.39) & (f < 122.41)] = 0
    ww[:, (f > 122.586) & (f < 122.617)] = 0
    ww[:, (f > 123.391) & (f < 123.41)] = 0
    ww[:, (f > 124.485) & (f < 124.515)] = 0
    ww[:, (f > 124.79) & (f < 124.815)] = 0
    ww[:, (f > 125.418) & (f < 125.46)] = 0
    ww[:, (f > 125.687) & (f < 125.724)] = 0
    ww[:, (f > 125.888) & (f < 125.938)] = 0
    ww[:, (f > 126.694) & (f < 126.705)] = 0
    ww[:, (f > 127.28) & (f < 127.324)] = 0
    ww[:, (f > 128.59) & (f < 128.611)] = 0
    ww[:, (f > 128.794) & (f < 128.812)] = 0
    ww[:, (f > 129.248) & (f < 129.257)] = 0
    ww[:, (f > 129.482) & (f < 129.52)] = 0
    ww[:, (f > 129.813) & (f < 129.99)] = 0
    ww[:, (f > 130.337) & (f < 130.356)] = 0
    ww[:, (f > 131.131) & (f < 131.168)] = 0
    ww[:, (f > 131.436) & (f < 131.467)] = 0
    ww[:, (f > 131.943) & (f < 131.961)] = 0
    ww[:, (f > 131.984) & (f < 132.018)] = 0
    ww[:, (f > 133.481) & (f < 133.517)] = 0
    ww[:, (f > 133.78) & (f < 133.823)] = 0
    ww[:, (f > 133.988) & (f < 134.012)] = 0
    ww[:, (f > 134.183) & (f < 134.216)] = 0
    ww[:, (f > 135.336) & (f < 135.367)] = 0
    ww[:, (f > 136.252) & (f < 136.276)] = 0
    ww[:, (f > 136.398) & (f < 136.453)] = 0
    ww[:, (f > 136.429) & (f < 136.453)] = 0
    ww[:, (f > 136.624) & (f < 136.703)] = 0
    ww[:, (f > 136.759) & (f < 136.813)] = 0
    ww[:, (f > 136.96) & (f < 137.472)] = 0
    ww[:, (f > 137.491) & (f < 137.657)] = 0
    ww[:, (f > 137.662) & (f < 137.832)] = 0
    ww[:, (f > 137.863) & (f < 137.949)] = 0
    ww[:, (f > 145.761) & (f < 145.777)] = 0
    ww[:, (f > 153.885) & (f < 153.921)] = 0
    ww[:, (f > 179.996) & (f < 180.03)] = 0

    ww[:, (f > 118.23) & (f < 118.40)] = 0
    ww[:, (f > 118.90) & (f < 119.10)] = 0
    ww[:, (f > 119.61) & (f < 119.70)] = 0
    ww[:, (f > 120.76) & (f < 120.86)] = 0
    ww[:, (f > 121.46) & (f < 121.54)] = 0
    ww[:, (f > 125.16) & (f < 125.25)] = 0
    ww[:, (f > 126.50) & (f < 126.60)] = 0
    ww[:, (f > 126.76) & (f < 126.85)] = 0
    ww[:, (f > 126.96) & (f < 127.05)] = 0
    ww[:, (f > 127.24) & (f < 127.37)] = 0
    ww[:, (f > 128.11) & (f < 128.20)] = 0
    ww[:, (f > 128.65) & (f < 128.86)] = 0
    ww[:, (f > 129.20) & (f < 129.30)] = 0
    ww[:, (f > 129.70) & (f < 130.15)] = 0
    ww[:, (f > 130.35) & (f < 130.45)] = 0
    ww[:, (f > 131.20) & (f < 131.34)] = 0
    ww[:, (f > 131.42) & (f < 131.62)] = 0
    ww[:, (f > 131.68) & (f < 131.78)] = 0
    ww[:, (f > 131.90) & (f < 132.06)] = 0
    ww[:, (f > 132.13) & (f < 132.18)] = 0
    ww[:, (f > 133.58) & (f < 133.62)] = 0
    ww[:, (f > 133.68) & (f < 133.73)] = 0
    ww[:, (f > 133.88) & (f < 133.93)] = 0
    ww[:, (f > 134.16) & (f < 134.24)] = 0
    ww[:, (f > 136.23) & (f < 136.29)] = 0
    ww[:, (f > 136.37) & (f < 136.47)] = 0
    ww[:, (f > 136.60) & (f < 136.73)] = 0
    ww[:, (f > 136.84) & (f < 137.98)] = 0
    ww[:, (f > 147.50) & (f < 147.57)] = 0

    dd[:, (f > 120.12) & (f < 120.20)] = 0
    dd[:, (f > 126.67) & (f < 126.73)] = 0
    dd[:, (f > 129.12) & (f < 129.18)] = 0
    dd[:, (f > 130.50) & (f < 130.62)] = 0
    dd[:, (f > 133.52) & (f < 133.58)] = 0
    dd[:, (f > 136.20) & (f < 136.30)] = 0
    dd[:, (f > 152.32) & (f < 152.37)] = 0
    dd[:, (f > 159.59) & (f < 159.65)] = 0
    dd[:, (f > 159.75) & (f < 159.80)] = 0

    ww[:, (f > 120.12) & (f < 120.20)] = 0
    ww[:, (f > 126.67) & (f < 126.73)] = 0
    ww[:, (f > 129.12) & (f < 129.18)] = 0
    ww[:, (f > 130.50) & (f < 130.62)] = 0
    ww[:, (f > 133.52) & (f < 133.58)] = 0
    ww[:, (f > 136.20) & (f < 136.30)] = 0
    ww[:, (f > 152.32) & (f < 152.37)] = 0
    ww[:, (f > 159.59) & (f < 159.65)] = 0
    ww[:, (f > 159.75) & (f < 159.80)] = 0

    if (len(d.shape) == 1) and (len(w.shape) == 1):
        dd = np.copy(dd.flatten())
        ww = np.copy(ww.flatten())

    return dd, ww


def cleaning_sweep(
    f, d, w, window_width_MHz=4, Npolyterms_block=4, N_choice=20, N_sigma=2.5
):
    # Initialization of output arrays
    d_out = np.copy(d)
    w_out = np.copy(w)
    index = np.arange(len(f))

    # Initial section of data of width "window_width_MHz"
    f_start_block = f[f <= (f[0] + window_width_MHz)]
    d_start_block = d[f <= (f[0] + window_width_MHz)]
    w_start_block = w[f <= (f[0] + window_width_MHz)]

    # Computing residuals for initial section
    par = np.polyfit(
        f_start_block[w_start_block > 0],
        d_start_block[w_start_block > 0],
        Npolyterms_block - 1,
    )
    m_start_block = np.polyval(par, f_start_block)
    r_start_block = d_start_block - m_start_block

    # Computation of STD for initial section using the median statistic
    small_sample_size = round(
        len(r_start_block) / 2
    )  # number datapoints drawn for repetitions
    flag = 0
    for _ in range(N_choice):
        r_choice = np.random.choice(r_start_block[w_start_block > 0], small_sample_size)
        if flag == 0:
            r_choice_std = np.std(r_choice)
            flag = 1

        elif flag == 1:
            r_choice_std = np.append(r_choice_std, np.std(r_choice))
    r_std = np.median(r_choice_std)

    # Initial window limits
    index_low = 0
    index_high = len(f_start_block) - 1

    # Sweeping in frequency
    count = 0
    while index_high < (len(f) - 1):

        index_low += 1
        index_high = index_high + 1

        # Selecting section of data of width "window_width_MHz"
        if index_high < (len(f) - 1):
            f_block = f[index_low : (index_high + 1)]
            d_block = d_out[index_low : (index_high + 1)]
            w_block = w_out[index_low : (index_high + 1)]
            i_block = index[index_low : (index_high + 1)]

        elif index_high == (len(f) - 1):
            f_block = f[index_low::]
            d_block = d_out[index_low::]
            w_block = w_out[index_low::]
            i_block = index[index_low::]

        # Computing residuals within window
        # print(np.sum(w_block))
        if np.sum(w_block) > 0:
            par = np.polyfit(
                f_block[w_block > 0], d_block[w_block > 0], Npolyterms_block - 1
            )
            m_block = np.polyval(par, f_block)
            r_block = d_block - m_block

            # Delete new point if it falls outside N_sigma x previous STD of noise
            if np.abs(r_block[-1]) > (N_sigma * r_std):
                w_block[-1] = 0

                d_out[i_block[-1]] = 0
                w_out[i_block[-1]] = 0

            # Compute STD for the current window using only good data
            r_std = np.std(r_block[w_block > 0])

        count += 1

    return d_out, w_out


def cleaning_polynomial(
    fin, tin, win, model_type="loglog", Nterms_fg=10, Nterms_std=3, Nstd=5
):
    """
    September 4, 2017

    This function fits a log-log polynomial to spectrum, and then, iteratively, removes the points
    that fall outside the allowed range.
    The allowed range is determined as n_sigma x a polynomial with terms Nterms_std
    """

    f = np.copy(fin)
    t = np.copy(tin)
    w = np.copy(win)

    sum_RFI = 2
    sum_RFI_old = 1
    while sum_RFI > sum_RFI_old:

        # Remove points with temperature equal to zero, NaN, and +/- Inf
        mask = (t > 0) & (w > 0) & (~np.isnan(t)) & (~np.isinf(t))
        ff = f[mask]
        tt = t[mask]
        ww = w[mask]

        if model_type == "loglog":

            # Log of frequency and temperature, for data with non-zero weights
            log_f = np.log10(ff / 200)
            log_t = np.log10(tt)

            # Remove points with Log_t equal to NaN and +/- Inf
            mask = (~np.isnan(log_t)) & (~np.isinf(log_t))
            log_ff = log_f[mask]
            log_tt = log_t[mask]

            par = np.polyfit(log_ff, log_tt, Nterms_fg - 1)
            log_model = np.polyval(par, np.log10(f / 200))
            model = 10 ** log_model

        elif model_type == "poly":

            par = np.polyfit(ff, tt, Nterms_fg - 1)
            model = np.polyval(par, f)

        res = t - model
        rr = res[(t > 0) & (w > 0) & (~np.isnan(t)) & (~np.isinf(t))]

        par = np.polyfit(ff[ww > 0] / 200, np.abs(rr)[ww > 0], Nterms_std - 1)
        model_std = np.polyval(par, f / 200)

        RFI = np.zeros(len(fin))
        t[np.abs(res) > Nstd * model_std] = 0
        w[np.abs(res) > Nstd * model_std] = 0
        RFI[np.abs(res) > Nstd * model_std] = 1

        sum_RFI_old = np.copy(sum_RFI)
        sum_RFI = np.sum(RFI)

    tout = np.copy(tin)
    tout[w == 0] = 0

    return tout, w
