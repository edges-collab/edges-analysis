[build-system]
requires = [
    "setuptools>=60",
    "setuptools-scm>=8.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]


[project]
name = "edges-analysis"
description = "Functionality for processing EDGES field data"
readme = "README.rst"
authors = [
    {name="Steven Murray", email="steven.murray@sns.it"},
    {name="Nivedita Mahesh", email="nmahesh4@asu.edu"},
    {name="Akshatha Vydula", email="avydula@asu.edu"}
]
license = {text="MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]

dependencies = [
    "numpy>=2.0",
    "scipy",
    "matplotlib",
    "astropy>=5.0",
    "pygsdata>=0.2.2",
    "astropy-healpix",
    "h5py",
    "tqdm",
    "rich>=9.0",
    "pathos",
    "methodtools",
    "attrs",
    "questionary",
    "psutil",
    "jinja2",
    "astropy-healpix",
    "typing_extensions",
    "frozendict",
    "jupyter_core",
    'read-acq',
    'bidict',
    'pyyaml',
    "dill",
    "hickle",
    "hickleable>=0.2.4",
    "statsmodels",
    'cattrs',
    'cyclopts',
    'yabf',

]
dynamic = ["version"]

[project.urls]
Documentation = "https://edges-analysis.readthedocs.io/en/latest/"
Repository = "https://github.com/edges-collab/edges-analysis"
Issues = "https://github.com/edges-collab/edges-analysis/issues"
Changelog = "https://github.com/edges-collab/edges-analysis/releases"


[project.optional-dependencies]
testing = [
  "pytest",
  "pytest-cov",
  "pytest_cases>=3.8.3"
]
docs = [
  "sphinx",
  "nbsphinx",
  "numpydoc",
  "sphinx_rtd_theme",
  "sphinx_click",
  "ipython",
  "myst-parser",
  "furo",
]
report = [
  "papermill", "jupyter", "beautifultable"
]
all = [
  "edges-analysis[report]"
]
dev = [
  "edges-analysis[testing,docs,report]",
  "pre-commit"
]

[project.scripts]
edges = "edges.cli:app"



[tool.pytest.ini_options]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = "--verbose --durations=25 --cov edges"
norecursedirs = [
    "dist",
    "build",
    ".tox"
]
testpaths = "tests"

[tool.ruff]
exclude = [
  "*.ipynb",  # for now
]
preview = true
line-length=88
target-version="py311"

[tool.ruff.lint]
extend-select = [
  "UP",   # pyupgrade
  "E",    # pycodestyle
  "W",    # pycodestyle warning
  "F",    # pyflakes
  "C90",  # mccabe complexity
  "I",    # isort
  "N",    # pep8-naming
  "D",    # docstyle
  # "ANN"   # type annotations
  "B",    # bugbear
  "A",    # builtins
  "C4",   # comprehensions
  "DTZ",  # datetime
  "FA",   # future annotations
  "PIE",  # flake8-pie
  "T",    # print statements
  "PT",   # pytest-style
  "Q",    # quotes
  "SIM",  # simplify
  "PTH",  # use Pathlib
  "ERA",  # kill commented code
  "NPY",  # numpy-specific rules
  "PERF", # performance
  # "FURB", # refurb
  "RUF",  # ruff-specific rules
  "RET",  # return statements
  "RSE",  # exception raises
  "TRY201", # verbose raise
]
ignore = [
    "DTZ007",   # use %z in strptime
    "DTZ001",   # require tzinfo in datetime
    "B008",     # do not performa function call in argument defaults
    "PTH207",   # allow glob.glob() because when we use it, it's necessary
    "A003",     # class attribute shadowing builtins
    "RUF009",   # don;e perform function call in dataclass defaults
    "N806",  # Variable name should be lower case. We have some single-letter variables that make more sense to be caps.
    "D401",  # First line should be in imperative mood -- cached_properties don't fit this bill.
    "D101",  # Missing docstring in public class -- my docstrings are in the __init__ which seems to fail this ?
    "N815",
    "N807",  # Allow method names to start and end with __
    "RUF012", # mutable class attributes annotation
    # The rest should be un-commented when possible...
    "PTH123",
    "PT011",
    "A005",  # module name shadows builtin
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "D1",
    "DTZ",   # ignore datetime in tests
    "T",     # print statements
]
"docs/conf.py" = [
    "A",  # conf.py can shadow builtins
    "ERA",
    "DTZ",
]
"src/edges/analysis/calibration/loss.py" = [
  "N806",  # upper-case variables because it's more mathy
]
"src/edges/analysis/config.py" = [
  "PTH111",  # here we want to use strings
]

"src/edges/cal/spectra.py" = [
    "N802",
]
"src/edges/cal/calobs.py" = [
    "N802",
]
"src/edges/cal/reflection_coefficient.py" = [
    "A002",
]
"src/*/__init__.py" = [
    "F401", "E402",
]
"src/edges_/cal/alanmode.py" = [
    "N803",
]
"**/*.ipynb" = [
    "T201", "DTZ", "D", "PTH119", "ERA"
]

[tool.ruff.lint.pydocstyle]
convention = 'numpy'
property-decorators = ["pytest.fixture"]

[tool.ruff.lint.mccabe]
max-complexity = 21
