[build-system]
requires = [
    "setuptools>=60",
    "setuptools-scm>=8.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]


[project]
name = "edges-analysis"
description = "Functionality for processing EDGES field data"
readme = "README.rst"
authors = [
    {name="Steven Murray", email="steven.murray@sns.it"},
]
license = {text="MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "numpy",
    "scipy",
    "matplotlib",
    "astropy",
    "pygsdata",
    "edges-io>=4.0.0",
    "edges-cal>=6.0.0",
    "healpy",
    "h5py",
    "tqdm",
    "rich>=9.0",
    "pathos",
    "methodtools",
    "attrs",
    "questionary",
    "psutil",
    "jinja2",
    "astropy-healpix",
    "typing_extensions",
    "frozendict",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://edges-analysis.readthedocs.io/en/latest/"
Repository = "https://github.com/edges-collab/edges-analysis"
Issues = "https://github.com/edges-collab/edges-analysis/issues"
Changelog = "https://github.com/edges-collab/edges-analysis/releases"


[project.scripts]
edges-analysis = "edges_analysis.cli:main"

[project.optional-dependencies]
testing = [
  "pytest",
  "pytest-cov",
  "pytest_cases>=3.8.3"
]
docs = [
  "sphinx",
  "nbsphinx",
  "numpydoc",
  "sphinx_rtd_theme",
  "sphinx_click",
  "ipython"
]
dev = [
  "edges-analysis[testing,docs]",
  "pre-commit"
]


[tool.pytest.ini_options]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = "--verbose --durations=25 --cov edges_analysis"
norecursedirs = [
    "dist",
    "build",
    ".tox"
]
testpaths = "tests"

[tool.black]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''
